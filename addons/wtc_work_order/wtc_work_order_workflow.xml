<?xml version="1.0" encoding="utf-8"?>
<openerp>
    <data>


<!-- ##### Object ##### -->
		<record id="wkf_wo" model="workflow">
		    <field name="name">work.order.basic</field>
		    <field name="osv">wtc.work.order</field>
		    <field name="on_create">True</field>
		</record>
		
		<record id="act_draft" model="workflow.activity">
			<field name="wkf_id" ref="wkf_wo"/>
			<field name="flow_start">True</field>
			<field name="name">draft</field>
		</record>
		
		
		
		
		
		<record id="act_rfa" model="workflow.activity">
			<field name="wkf_id" ref="wkf_wo"/>
			<field name="name">rfa</field>
			<field name="kind">function</field>
			<field name="action">wkf_request_approval()</field>
		</record>
		
		<record id="act_unused" model="workflow.activity">
			<field name="wkf_id" ref="wkf_wo"/>
			<field name="name">unused</field>
			<field name="kind">function</field>
			<field name="action">wkf_action_button_confirm_reason_unused()</field>
		</record>
		

		<record id="act_is_approved" model="workflow.activity">
			<field name="wkf_id" ref="wkf_wo"/>
			<field name="name">is_approved</field>
			<field name="split_mode">OR</field>
			<field name="kind">function</field>
			<field name="action">wkf_approval()</field>
		</record>

		<record id="act_waiting_for_approval" model="workflow.activity">
			<field name="wkf_id" ref="wkf_wo"/>
			<field name="name">waiting_for_approval</field>
			<field name="kind">function</field>
			<field name="action">write({'state':'waiting_for_approval'})</field>
		</record>

		<record id="act_approved" model="workflow.activity">
			<field name="wkf_id" ref="wkf_wo"/>
			<field name="name">approved</field>
		</record>

		<record id="act_set_to_draft" model="workflow.activity">
			<field name="wkf_id" ref="wkf_wo"/>
			<field name="name">set_to_draft</field>
			<field name="kind">function</field>
			<field name="action">wkf_set_to_draft()</field>
		</record>
		<record id="act_set_to_draft_cancel" model="workflow.activity">
			<field name="wkf_id" ref="wkf_wo"/>
			<field name="name">set_to_draft</field>
			<field name="kind">function</field>
			<field name="action">wkf_set_to_draft_cancel()</field>
		</record>		
		<record id="act_confirmed" model="workflow.activity">
			<field name="wkf_id" ref="wkf_wo"/>
			<field name="name">confirmed</field>
			<field name="split_mode">OR</field>
			<field name="kind">function</field>
			<field name="action">wkf_confirm_order()</field>
		</record>
		<record id="act_picking" model="workflow.activity">
		    <field name="wkf_id" ref="wkf_wo"/>
		     <field name="name">picking</field>
		     <field name="kind">function</field>
		     <field name="action">action_picking_create()</field>
		</record>
               
		<record id="act_picking_done" model="workflow.activity">
		    <field name="wkf_id" ref="wkf_wo"/>
		     <field name="name">picking_done</field>
		     <field name="action">picking_done()</field>
		     <field name="kind">function</field>
		</record>  


		<record id="act_start2" model="workflow.activity">
		    <field name="wkf_id" ref="wkf_wo"/>
		     <field name="name">start</field>
		     <field name="action">start2()</field>
		     <field name="kind">function</field>
		</record>

		<record id="act_in_progress" model="workflow.activity">
		    <field name="wkf_id" ref="wkf_wo"/>
		     <field name="name">in_progress</field>
		     <field name="action">start_wo()</field>
		     <field name="kind">function</field>
		</record>

		<record id="act_break" model="workflow.activity">
		    <field name="wkf_id" ref="wkf_wo"/>
		     <field name="name">break</field>
		     <field name="action">break_wo()</field>
		     <field name="kind">function</field>
		</record>
		<record id="act_end_wo" model="workflow.activity">
		    <field name="wkf_id" ref="wkf_wo"/>
		     <field name="name">end</field>
		     <field name="action">end_wo()</field>
		     <field name="kind">function</field>
		</record>
		<record id="act_finished" model="workflow.activity">
		    <field name="wkf_id" ref="wkf_wo"/>
		     <field name="name">finished</field>
		     <field name="action">finished()</field>
		     <field name="join_mode">AND</field>
		     <field name="kind">function</field>
		</record>
       <record id="act_invoice" model="workflow.activity">
            <field name="wkf_id" ref="wkf_wo"/>
            <field name="name">invoice</field>
            <field name="kind">subflow</field>
            <field name="subflow_id" search="[('osv','=','account.invoice')]"/>
            <field name="action">invoice_create()</field>
        </record>
        
         <record id="act_invoice_done" model="workflow.activity">
            <field name="wkf_id" ref="wkf_wo"/>
            <field name="name">invoice_done</field>
        </record>

        <record id="act_except_invoice" model="workflow.activity">
            <field name="wkf_id" ref="wkf_wo"/>
            <field name="name">except_invoice</field>
            <field name="kind">function</field>
            <field name="action">write({'state':'except_invoice'})</field>
        </record>
         <record id="act_done" model="workflow.activity">
            <field name="wkf_id" ref="wkf_wo"/>
            <field name="name">done</field>
            <field name="action">invoice_done()</field>
            <field name="kind">function</field>
        </record>
        <record id="act_cancel" model="workflow.activity">
            <field name="wkf_id" ref="wkf_wo"/>
            <field name="name">cancel</field>
            <field name="kind">function</field>
            <field name="flow_stop">True</field>
            <field name="action">wkf_action_cancel()</field>
        </record>

        
        <record id="act_except_picking" model="workflow.activity">
            <field name="wkf_id" ref="wkf_wo"/>
            <field name="name">except_picking</field>
            <field name="kind">function</field>
            <field name="action">write({'state':'except_picking'})</field>
        </record>
        
        <record id="act_router" model="workflow.activity">
            <field name="wkf_id" ref="wkf_wo"/>
            <field name="name">router</field>
            <field name="split_mode">OR</field>
            <field name="kind">function</field>
             <field name="join_mode">AND</field>
            <field name="action">wkf_approve_order()</field>
        </record>
        
        <record id="act_done" model="workflow.activity">
            <field name="wkf_id" ref="wkf_wo"/>
            <field name="name">done</field>
            <field name="action">wkf_po_done()</field>
            <field name="kind">function</field>
            <field name="flow_stop">True</field>
            <field name="join_mode">AND</field>
        </record>
        
        
    
   		 
    	<record id="trans_draft_cancel" model="workflow.transition">
            <field name="act_from" ref="act_draft"/>
            <field name="act_to" ref="act_cancel"/>
            <field name="signal">wkf_action_cancel</field>
        </record>
        
 
		 <record id="trans_draft_to_rfa" model="workflow.transition">
			<field name="act_from" ref="act_draft"/>
		    <field name="act_to" ref="act_rfa"/>
		    <field name="signal">approval_request</field> 
		</record>   
		
		<record id="trans_draft_to_unused" model="workflow.transition">
			<field name="act_from" ref="act_draft"/>
		    <field name="act_to" ref="act_unused"/>
		    <field name="signal">unused_request</field> 
		</record>   
   
   
 		<record id="trans_rfa_is_approved" model="workflow.transition">
			<field name="act_from" ref="act_rfa"/>
			<field name="act_to" ref="act_waiting_for_approval"/>
		</record>
		<record id="trans_is_approved_approved" model="workflow.transition">
			<field name="act_from" ref="act_is_approved"/>
			<field name="act_to" ref="act_approved"/>
			<field name="condition">has_approved()</field>
		</record>
		<record id="trans_is_approved_draft" model="workflow.transition">
			<field name="act_from" ref="act_is_approved"/>
			<field name="act_to" ref="act_draft"/>
			<field name="condition">has_rejected()</field>
		</record>
		<record id="trans_is_approved_waiting_for_approval" model="workflow.transition">
			<field name="act_from" ref="act_is_approved"/>
			<field name="act_to" ref="act_waiting_for_approval"/>
			<field name="condition">not has_approved() and not has_rejected()</field>
		</record>
		<record id="trans_waiting_for_approval_set_to_draft" model="workflow.transition">
			<field name="act_from" ref="act_waiting_for_approval"/>
			<field name="act_to" ref="act_set_to_draft"/>
			<field name="signal">approval_reject</field>
		</record>
		<record id="trans_set_to_draft_draft" model="workflow.transition">
			<field name="act_from" ref="act_set_to_draft"/>
			<field name="act_to" ref="act_draft"/>
		</record>
		<record id="trans_waiting_for_approval_draft" model="workflow.transition">
			<field name="act_from" ref="act_waiting_for_approval"/>
			<field name="act_to" ref="act_set_to_draft_cancel"/>
			<field name="signal">approval_cancel</field>
		</record>
		<record id="trans_set_to_draft_cancel_to_draft" model="workflow.transition">
			<field name="act_from" ref="act_set_to_draft_cancel"/>
			<field name="act_to" ref="act_draft"/>
		</record>		
		<record id="trans_waiting_for_approval_is_approved" model="workflow.transition">
			<field name="act_from" ref="act_waiting_for_approval"/>
			<field name="act_to" ref="act_is_approved"/>
			<field name="signal">approval_approve</field>
		</record>
		<record id="trans_approved_confirmed" model="workflow.transition">
			<field name="act_from" ref="act_approved"/>
			<field name="act_to" ref="act_confirmed"/>
			<!--field name="signal">purchase_confirm</field-->
		</record>
		 <record id="trans_confirmed_router" model="workflow.transition">
		    <field name="act_from" ref="act_confirmed"/>
		    <field name="act_to" ref="act_router"/> 
		</record>
		<record id="trans_router_picking" model="workflow.transition">
		    <field name="act_from" ref="act_router"/>
		     <field name="act_to" ref="act_picking"/>
		     <field name="condition">has_sparepart()</field>
		</record>
		<record id="trans_router_picking_done" model="workflow.transition">
		     <field name="act_from" ref="act_router"/>
		     <field name="act_to" ref="act_picking_done"/>
		     <field name="condition">not has_sparepart()</field>
		</record>
		<record id="trans_router_start2" model="workflow.transition">
		     <field name="act_from" ref="act_router"/>
		     <field name="act_to" ref="act_start2"/>
		     <field name="condition">has_service()</field>
		</record>
		<record id="trans_start_act_in_progress" model="workflow.transition">
		    <field name="act_from" ref="act_start2"/>
		    <field name="act_to" ref="act_in_progress"/>
		    <field name="signal">start_wo</field>
		</record>
		<record id="trans_act_in_progress_to_break" model="workflow.transition">
		    <field name="act_from" ref="act_in_progress"/>
		    <field name="act_to" ref="act_break"/>
		    <field name="signal">break_wo</field>
		</record>
		<record id="trans_act_end_break_to_in_progress" model="workflow.transition">
		     <field name="act_from" ref="act_break"/>
		     <field name="act_to" ref="act_in_progress"/>
		     <field name="signal">start_wo</field>
		</record>
		<record id="trans_act_in_progress_to_end_wo" model="workflow.transition">
		     <field name="act_from" ref="act_in_progress"/>
		     <field name="act_to" ref="act_end_wo"/>
		     <field name="signal">end_wo</field>
		</record>
		<record id="trans_router_end" model="workflow.transition">
		     <field name="act_from" ref="act_router"/>
		     <field name="act_to" ref="act_end_wo"/>
		     <field name="condition">not has_service()</field>
		</record>
		<record id="trans_end_wo_to_finished" model="workflow.transition">
		     <field name="act_from" ref="act_end_wo"/>
		     <field name="act_to" ref="act_finished"/>    
		</record>
		<record id="trans_act_picking_done_to_act_finished" model="workflow.transition">
		      <field name="act_from" ref="act_picking_done"/>
		      <field name="act_to" ref="act_finished"/>
		</record>
		<record id="trans_act_finished_to_invoice" model="workflow.transition">
		      <field name="act_from" ref="act_finished"/>
		      <field name="act_to" ref="act_invoice"/>
		      <field name="signal">invoice_create</field>
		</record>
		<record id="trans_act_invoice_to_act_invoice_done" model="workflow.transition">
		       <field name="act_from" ref="act_invoice"/>
		       <field name="act_to" ref="act_invoice_done"/>
		       <field name="signal">subflow.paid</field>
		</record>


        <record id="trans_invoice_except_invoice" model="workflow.transition">
            <field name="act_from" ref="act_invoice"/>
            <field name="act_to" ref="act_except_invoice"/>
            <field name="signal">subflow.cancel</field>
        </record>
        
        <record id="trans_except_invoice_invoice_done" model="workflow.transition">
            <field name="act_from" ref="act_except_invoice"/>
            <field name="act_to" ref="act_invoice_done"/>
            <field name="signal">invoice_ok</field>
        </record>
          <record id="trans_invoice_done_to_act_done" model="workflow.transition">
            <field name="act_from" ref="act_invoice_done"/>
            <field name="act_to" ref="act_done"/>
            <field name="signal">action_done</field>
        </record>

 		<record id="trans_except_picking_picking_done" model="workflow.transition">
            <field name="act_from" ref="act_except_picking"/>
            <field name="act_to" ref="act_picking_done"/>
            <field name="signal">picking_ok</field>
        </record>
        
	    <record id="trans_picking_to_except_picking" model="workflow.transition">
            <field name="act_from" ref="act_picking"/>
            <field name="act_to" ref="act_except_picking"/>
            <field name="signal">picking_cancel</field>
        </record>
        
        <record id="trans_picking_picking_done" model="workflow.transition">
            <field name="act_from" ref="act_picking"/>
            <field name="act_to" ref="act_picking_done"/>
            <field name="signal">picking_done</field>
            
        </record>
        
        <record id="trans_invoice_done_cancel" model="workflow.transition">
            <field name="act_from" ref="act_invoice_done"/>
            <field name="act_to" ref="act_cancel"/>
            <field name="signal">wkf_action_cancel</field>
        </record>
        
        <record id="trans_done_cancel" model="workflow.transition">
            <field name="act_from" ref="act_done"/>
            <field name="act_to" ref="act_cancel"/>
            <field name="signal">wkf_action_cancel</field>
        </record>
        
         <record id="trans_finished_cancel" model="workflow.transition">
            <field name="act_from" ref="act_finished"/>
            <field name="act_to" ref="act_cancel"/>
            <field name="signal">wkf_action_cancel</field>
        </record>
        
         <record id="trans_start_cancel" model="workflow.transition">
            <field name="act_from" ref="act_start2"/>
            <field name="act_to" ref="act_cancel"/>
            <field name="signal">wkf_action_cancel</field>
        </record>
        
        <record id="trans_in_progress_cancel" model="workflow.transition">
            <field name="act_from" ref="act_in_progress"/>
            <field name="act_to" ref="act_cancel"/>
            <field name="signal">wkf_action_cancel</field>
        </record>
        
        <record id="trans_break_cancel" model="workflow.transition">
            <field name="act_from" ref="act_break"/>
            <field name="act_to" ref="act_cancel"/>
            <field name="signal">wkf_action_cancel</field>
        </record>
        
         <record id="trans_picking_cancel" model="workflow.transition">
            <field name="act_from" ref="act_picking"/>
            <field name="act_to" ref="act_cancel"/>
            <field name="signal">wkf_action_cancel</field>
        </record>

		<!-- <record id="trans_picking_picking_done" model="workflow.transition">
            <field name="act_from" ref="act_picking"/>
            <field name="act_to" ref="act_picking_done"/>
            <field name="signal">invoice_create</field>
		 </record> -->

    </data>
</openerp>
